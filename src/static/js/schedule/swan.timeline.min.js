/*!
 * swan.timeline v1.0
 *
 * Copyright 2014 WistronITS
 * Author Rex Rao
 * Date: 2014.3.5
 */
$(function () { $.widget("swan.timeline", { options: { startTime: "2016/4/1", endTime: "2016/12/31", showArrow: !0, timeScalePosition: "bottom", autoAdjustTime: "none", smoothScroll: "advanced", guides: "both", showGuidesLabel: !0, showSlider: !0, zoom: 5, data: null }, _canvas: null, _arrowLeft: null, _arrowRight: null, _itemArea: null, _timeScale: null, _guidesLeft: null, _guidesRight: null, _slider: null, _ie8Hint: null, _timeScaleItems: [], _items: [], _itemRows: [], _currentItem: null, _arrowInited: !1, _scrolling: !1, _scrollX: null, _scrollDirection: null, _scrollStartX: null, _scrollStartTime: null, _scrollAcceleration: 0, _smoothScrollTime: 400, _widthAdjust: 0, _dayWidth: 6, _rowHeigth: 0, _rowMargin: 15, _timeScaleHeigth: 0, _minHeight: 300, _canvasHeight: 0, _zoomLevel: 5, _sliderInited: !1, _startTime: new Date, _endTime: new Date, _create: function () { var n = this; this.element.addClass("swan-timeline-container ui-corner-all").height(this._minHeight); this._canvas = $('<div class="swan-timeline-canvas swan-timeline-canvas-drag">').draggable({ axis: "x", cursor: "url(./images/cursor_drag_hand.png), w-resize", refreshPositions: !0, start: function (t) { $(this).removeClass("swan-timeline-canvas-drag").stop(); n._scrollX = n._scrollStartX = t.pageX; n._scrollStartTime = new Date }, drag: function (t) { n._scrollDirection = t.pageX < n._scrollX ? "right" : "left"; n._scrollX = t.pageX }, stop: function (t) { $(this).addClass("swan-timeline-canvas-drag"); var r = Math.abs(t.pageX - n._scrollStartX), i = (new Date).getTime() - n._scrollStartTime.getTime(); n._scrollAcceleration = parseFloat(r) / (i * i); n._smoothScroll(function () { n._adjustOffset(null, n, !0) }); n._scrollX = null; n._scrollStartX = null; n._scrollStartTime = null } }).on("mousewheel", function (t) { t.deltaY !== 0 && (t.deltaY > 0 ? (n.zoom(n._zoomLevel + 1), t.preventDefault()) : (n.zoom(n._zoomLevel - 1), t.preventDefault())) }).appendTo(this.element); this._itemArea = $('<div class="swan-timeline-item-container">').appendTo(this._canvas); this._timeScale = $('<div class="swan-timeline-timescale">').appendTo(this._canvas); this._guidesLeft = $('<div class="swan-timeline-guides"><div><\/div><\/div>').appendTo(this._canvas); this._guidesRight = $('<div class="swan-timeline-guides"><div><\/div><\/div>').appendTo(this._canvas); this._refresh() }, _refresh: function () { this.options.showArrow ? (this._initScroller(), this._arrowLeft.show(), this._arrowRight.show()) : (this._arrowLeft && this._arrowLeft.hide(), this._arrowRight && this._arrowRight.hide()); this.options.showSlider ? (this._initSlider(), this._slider.container.show()) : this._slider && this._slider.container.hide(); this._itemArea.empty(); this._timeScale.empty(); this._guidesLeft.hide(); this._guidesRight.hide(); this._timeScaleItems = []; this._items = []; this._itemRows = []; this._currentItem = null; this._widthAdjust = 0; this._rowHeigth = 0; this._timeScaleHeigth = 0; this._zoomLevel = this.options.zoom; this._startTime = new Date(this.options.startTime); this._endTime = new Date(this.options.endTime); this._initData(); this._initTimeScale(); this._drawTimeScale(!1); this._drawItems(); this._adjustHeight(); this._fixIE8Height() }, _destroy: function () { this._canvas.remove(); this.element.removeClass("swan-timeline-container") }, _setOptions: function () { this._superApply(arguments); this._refresh() }, _setOption: function (n, t) { this._super(n, t) }, _initScroller: function () { var n = this; this._arrowInited || (this._arrowLeft = $('<div class="swan-timeline-arrow swan-timeline-arrow-left"><div><\/div><\/div>').css("opacity", .1).on("mousedown", function () { n._scrolling = !0; n._scrollDirection = "left"; n._scrollAcceleration = .001; n._scroll() }).on("mouseup", function () { n._scrolling = !1 }).on("mouseenter", function () { $(this).stop().fadeTo(400, .5) }).on("mouseleave", function () { $(this).stop().fadeTo(400, .1) }).appendTo(this.element), this._arrowRight = $('<div class="swan-timeline-arrow swan-timeline-arrow-right"><div><\/div><\/div>').css("opacity", .1).on("mousedown", function () { n._scrolling = !0; n._scrollDirection = "right"; n._scrollAcceleration = .001; n._scroll() }).on("mouseup", function () { n._scrolling = !1 }).on("mouseenter", function () { $(this).stop().fadeTo(400, .5) }).on("mouseleave", function () { $(this).stop().fadeTo(400, .1) }).appendTo(this.element), this._arrowInited = !0) }, _initSlider: function () { var t = this, n; this._sliderInited || (n = {}, n.container = $('<div class="swan-timeline-slider-container">').css("opacity", .25).on("mouseenter", function () { $(this).stop().fadeTo(200, .75) }).on("mouseleave", function () { $(this).stop().fadeTo(200, .25) }), n.slider = $('<div class="swan-timeline-slider">').appendTo(n.container), n.block = $('<div class="swan-timeline-slider-handle">').draggable({ axis: "y", cursor: "pointer", refreshPositions: !0, containment: "parent", drag: function () { var n = t._slider.getZoomLevel(); n !== t._zoomLevel && t.zoom(n, !0) } }).appendTo(n.slider), n.plus = $('<div class="swan-timeline-slider-plus">').on("mousedown", function () { t.zoom(t._zoomLevel + 1) }).appendTo(n.container), n.minus = $('<div class="swan-timeline-slider-minus">').on("mousedown", function () { t.zoom(t._zoomLevel - 1) }).appendTo(n.container), n.setZoomLevel = function () { var n = (10 - t._zoomLevel) * 8; this.block.stop().animate({ top: n }) }, n.getZoomLevel = function () { var n = this.block.position().top; return Math.min(10, Math.max(1, parseInt(10 - n / 8))) }, n.setZoomLevel(), n.container = n.container.appendTo(this.element), this._slider = n, this._sliderInited = !0) }, _initData: function () { var n, i, t; if (this.options.data && $.isArray(this.options.data)) for (n = 0; n < this.options.data.length; n++) i = this.options.data[n], t = { startTime: new Date(i.startTime), endTime: new Date(i.endTime), title: i.title, content: i.content }, (this.options.autoAdjustTime === "both" || this.options.autoAdjustTime === "start") && (t.startTime < this._startTime || n === 0) && (this._startTime = t.startTime), (this.options.autoAdjustTime === "both" || this.options.autoAdjustTime === "end") && (t.endTime > this._endTime || n === 0) && (this._endTime = t.endTime), this._items.push(t) }, _initTimeScale: function () { var n = this._startTime.getFullYear(), o = this._startTime.getMonth(), e = this._endTime.getFullYear(), s = this._endTime.getMonth(), t, h, i, c, r, u, l, f, a; if (n === e) for (t = o; t <= s; t++) h = { date: new Date(n, t) }, this._timeScaleItems.push(h); else { for (i = o; i < 12; i++) c = { date: new Date(n, i) }, this._timeScaleItems.push(c); for (r = n + 1; r < e; r++) for (u = 0; u < 12; u++) l = { date: new Date(r, u) }, this._timeScaleItems.push(l); for (f = 0; f <= s; f++) a = { date: new Date(e, f) }, this._timeScaleItems.push(a) } }, _drawTimeScale: function (n) { var s, r, i, t, f, e; for (this._dayWidth = this._zoomLevel, s = this._zoomLevel !== 1 ? this._zoomLevel - -13 : 12, r = 0, i = 0; i < this._timeScaleItems.length; i++) { t = this._timeScaleItems[i]; t.monthWidth = this._getDaysOfMonth(t.date) * this._dayWidth; var o = "", h = t.date.getFullYear(), u = t.date.getMonth() + 1; this._zoomLevel === 1 ? (i === 0 || u === 1) && (o = "" + h) : o = this._zoomLevel <= 3 && u !== 1 && i !== 0 ? "" + u : h + "." + u; f = $("<span>").html(o); this._zoomLevel < 4 ? f.css("background-image", "none") : (e = "url(./images/bgScale", this.options.timeScalePosition === "top" && (e += "Top"), e += "_" + +this._zoomLevel + ".png)", f.css("background-image", e)); t.element = $('<div class="swan-timeline-timescale-date">').width(t.monthWidth).css("font-size", s).append(f).appendTo(this._timeScale); i === 0 && (this._widthAdjust = this._getHorizonMargin(t.element)); r += t.monthWidth + this._widthAdjust } r += this._widthAdjust; this._timeScaleHeigth = this.options.timeScalePosition === "top" ? $(".swan-timeline-timescale-date > span").addClass("swan-timeline-timescale-top").height() : $(".swan-timeline-timescale-date > span").removeClass("swan-timeline-timescale-top").height(); this._adjustOffset(r, this, n) }, _drawItems: function () { for (var n, o, s, r, u, h, f, t, c, l, i = this, e = 0; e < this._items.length; e++) if (n = this._items[e], !(n.endTime < this._startTime) && !(n.startTime > this._endTime)) { for (n.element = $('<div class="swan-timeline-item"><\/div>').html($("<span>").attr("title", n.title).text(n.title)).appendTo(this._itemArea), o = this._getLeftAndWidth(n.startTime, n.endTime), n.left = o.left, n.width = o.width, n.right = n.left + n.width, s = !1, r = 0; r < this._itemRows.length; r++) { for (u = this._itemRows[r], h = !0, f = 0; f < u.length; f++) if (t = u[f], n.left >= t.left && n.left <= t.right || n.right >= t.left && n.right <= t.right || n.left <= t.left && n.right >= t.right) { h = !1; break } if (h) { n.vertical = this._getVertical(r); u.push(n); s = !0; break } } s || (this._itemRows.length === 0 && (this._rowHeigth = n.element.height()), n.vertical = this._getVertical(this._itemRows.length), this._itemRows.push([n])); c = Math.random() * 500; l = this.options.guides !== "none" ? function () { $(this).on("mouseenter", function () { i._currentItem = i._findItem($(this)); i._drawGuides() }).on("mouseleave", function () { i._currentItem = null; i._guidesLeft.hide(); i._guidesRight.hide() }) } : null; n.element = n.element.css(this.options.timeScalePosition, n.vertical).delay(c).animate({ width: n.width + "px", left: n.left + "px" }, 1e3, "easeOutBounce", l) } }, _drawGuides: function () { var r, u, f, e, n, o; if (this.options.guides !== "none" && this._currentItem) { var i = this._canvasHeight - this._currentItem.vertical - this._rowHeigth, s = i + this._rowHeigth / 2, t = this._canvas.width(); (this.options.guides === "both" || this.options.guides === "start") && (this.options.timeScalePosition === "top" ? this._guidesLeft.css({ left: this._currentItem.left, top: "auto", bottom: i }) : this._guidesLeft.css({ left: this._currentItem.left, top: i, bottom: "auto" }), this._guidesLeft.show(), r = this._guidesLeft.find("div"), this.options.showGuidesLabel ? (u = 0, f = 0, u = this.options.timeScalePosition === "top" ? this._canvasHeight - this._timeScaleHeigth - this._rowHeigth + 20 : this._rowHeigth + 5, this._currentItem.left + 60 >= t && (f = -60), r.css({ top: u, left: f }).text(this._currentItem.startTime.getFullYear() + "/" + (this._currentItem.startTime.getMonth() + 1) + "/" + this._currentItem.startTime.getDate()).show()) : r.empty().hide()); (this.options.guides === "both" || this.options.guides === "end") && (this.options.timeScalePosition === "top" ? this._guidesRight.css({ left: Math.min(this._currentItem.right, t), top: "auto", bottom: s }) : this._guidesRight.css({ left: Math.min(this._currentItem.right, t), top: s, bottom: "auto" }), this._guidesRight.show(), e = this._guidesRight.find("div"), this.options.showGuidesLabel ? (n = 0, o = 0, this.options.timeScalePosition === "top" ? (n = this._canvasHeight - this._timeScaleHeigth - this._rowHeigth / 2 + 20, this._currentItem.width <= 60 && (n -= 20)) : (n = this._rowHeigth / 2 + 5, this._currentItem.width <= 60 && (n += 20)), this._currentItem.right + 60 >= t && (o = -60), e.css({ top: n, left: o }).text(this._currentItem.endTime.getFullYear() + "/" + (this._currentItem.endTime.getMonth() + 1) + "/" + this._currentItem.endTime.getDate()).show()) : e.empty().hide()) } }, _adjustOffset: function (n, t, i) { var r = t || this, f = r._canvas.position().left, e = n || r._canvas.outerWidth(), o = r.element.innerWidth(), u; f > 0 || e < o ? i ? this._canvas.animate({ left: 0 }, 300, "easeOutQuart") : this._canvas.css("left", 0) : (u = o - e + r._widthAdjust, u > f && (i ? r._canvas.animate({ left: u }, 300, "easeOutQuart") : this._canvas.css("left", u))); r._canvas.outerWidth(n) }, _adjustHeight: function () { var n = this._timeScaleHeigth + this._rowMargin + (this._rowHeigth + this._rowMargin) * this._itemRows.length; n = Math.max(n, this._minHeight); n !== this._canvasHeight && (this._canvasHeight = n, this.element.animate({ height: this._canvasHeight }, 300, "easeOutQuad")) }, _fixIE8Height: function () { var n = /msie\s8/.test(navigator.userAgent.toLowerCase()); n && (this._ie8Hint || (this._ie8Hint = $('<div class="swan-timline-ie8">').text("Your browser is too old, please update it to enjoy more!  × ").on("click", function () { $(this).hide() }).appendTo(this.element)), $(".swan-timeline-timescale-date").css("height", this._canvasHeight)) }, _smoothScroll: function (n) { var t = this; if (t.options.smoothScroll === "off") { $.isFunction(n) && n(); return } var u = !0, f = "+", i = t._getDistance(), r = t._canvas.position().left; if (t._scrollDirection === "left") r >= 0 ? u = !1 : (r > -i && (i = -r), f = "+"); else { var o = t._canvas.outerWidth(), s = t.element.innerWidth(), e = o + r - s - t._widthAdjust; e <= 0 ? u = !1 : (e < i && (i = e), f = "-") } t._scrollAcceleration = 0; u ? t._canvas.animate({ left: f + "=" + i }, t._smoothScrollTime, "easeOutQuart", n) : typeof n == "function" && n() }, _scroll: function (n) { var t = this, u, i, r; if (!t._scrolling) { t._smoothScroll(); return } if (i = t.options.smoothScroll === "advanced" ? this._getDistance() / 20 : 20, r = t._canvas.position().left, t._scrollDirection === "left") { if (r >= 0) return; r > -i && (i = -r); u = "+" } else { var e = t._canvas.outerWidth(), o = t.element.innerWidth(), f = e + r - o - t._widthAdjust; if (f <= 0) return; f < i && (i = f); u = "-" } n = n || t._canvas; n.animate({ left: u + "=" + i }, 10, "linear", function () { t._scrollAcceleration += .0005; t._scroll(n) }) }, zoom: function (n, t) { var o = this, r, f, u, i, e; if (n = Math.min(10, Math.max(1, n)), this._zoomLevel !== n) { for (this._zoomLevel = n, this._timeScale.empty(), this._drawTimeScale(!1), this._guidesLeft.hide(), this._guidesRight.hide(), this.options.showSlider && !t && this._slider.setZoomLevel(n), r = 0; r < this._itemRows.length; r++) for (f = this._itemRows[r], u = 0; u < f.length; u++) i = f[u], e = this._getLeftAndWidth(i.startTime, i.endTime), i.left = e.left, i.width = e.width, i.right = i.left + i.width, this.options.guides !== "none" && r === this._itemRows.length - 1 && u === f.length - 1 ? i.element.stop().animate({ width: i.width + "px", left: i.left + "px" }, 100, "linear", function () { o._drawGuides() }) : i.element.stop().animate({ width: i.width + "px", left: i.left + "px" }, 100, "linear"); this._fixIE8Height() } }, _getLeftAndWidth: function (n, t) { for (var u = n.getFullYear(), o = n.getMonth(), c = n.getDate(), s = t.getFullYear(), l = t.getMonth(), v = t.getDate(), h = 0, i = 0, a = 0; a < this._timeScaleItems.length; a++) { var f = this._timeScaleItems[a], r = f.date.getFullYear(), e = f.date.getMonth(), y = this._getDaysOfMonth(f.date); if (r < u || r === u && e < o) { h += f.monthWidth + this._widthAdjust; continue } if (r === u && e === o && (h += (c - 1) * this._dayWidth), s === u && l === o) { i += (v - c) * this._dayWidth; break } if (r === u && e === o) { i += (y - (c - 1)) * this._dayWidth + this._widthAdjust; continue } if (r < s || r === s && e < l) { i += f.monthWidth + this._widthAdjust; continue } if (r === s && e === l) { i += (v - 1) * this._dayWidth; break } } return n < this._startTime && (h = -1), t > this._endTime && (i += 5 * this._zoomLevel), n >= t && (i = 1), { left: h, width: i } }, _getDistance: function () { if (this.options.smoothScroll === "off") return 0; if (this.options.smoothScroll === "basic") return 50; var n = this._scrollAcceleration * this._smoothScrollTime * this._smoothScrollTime * .2; return n <= 0 && (n = 50), n }, _getVertical: function (n) { return this._timeScaleHeigth + this._rowMargin + (this._rowHeigth + this._rowMargin) * n }, _getHorizonMargin: function (n) { if (!n || $(n).length === 0) return 0; var t = $(n), i = parseFloat(t.css("margin-left").match(/\d+(\.\d+)?/g)) || 0, r = parseFloat(t.css("margin-right").match(/\d+(\.\d+)?/g)) || 2; return i + r }, _getDaysOfMonth: function (n) { var t = new Date(n.getFullYear(), parseInt(n.getMonth()) + 1, 0); return t.getDate() }, _findItem: function (n) { var t, i; if (!n || n.length !== 1) return null; for (t = 0; t < this._items.length; t++) if (i = this._items[t], i.element[0] === n[0]) return i; return null } }) });